// Generate all subsequence -6:58:40
// Description

// A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.

// You are given a string S. You have to generate all the subsequences of the string S using a recursive approach (duplicates allowed)


// Input
// Input Format :

// First line of the input contains length of the string S

// Second line of the test case contains the string S

// Constraints :

// n <= 18




// Output
// Output all the substring in a particular order. To understand the order of printing, see the sample test case explanation


// Sample Input 1 

// 4
// abcd
// Sample Output 1

// a
// ab
// abc
// abcd
// abd
// ac
// acd
// ad
// b
// bc
// bcd
// bd
// c
// cd
// d
// Hint

// Output Explanation :



//Enter code here
function Sub(str,sub,index){
    if(sub.length>0){
         console.log(sub.join(""))
    }
   if(index==str.length){
       return
   }
   for(let i=index;i<str.length;i++){
       sub.push(str[i])
       Sub(str,sub,i+1)
       sub.pop()
   }
    
      
    
    
 }


function runProgram(input)
{
   input=input.trim().split("\n")
   n=+input[0]
   str=input[1].trim()
  Sub(str,[],0)

}
if (process.env.USERNAME === "") {
    runProgram(``);
} else {
    process.stdin.resume();
    process.stdin.setEncoding("ascii");
    let read = "";
    process.stdin.on("data", function (input) {
        read += input;
    });
    process.stdin.on("end", function () {
        read = read.replace(/\n$/, "");
        read = read.replace(/\n$/, "");
        runProgram(read);
    });
    process.on("SIGINT", function () {
        read = read.replace(/\n$/, "");
        runProgram(read);
        process.exit(0);
    });
}